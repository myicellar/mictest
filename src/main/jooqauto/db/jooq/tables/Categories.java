/**
 * This class is generated by jOOQ
 */
package db.jooq.tables;


import db.jooq.Public;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Categories extends TableImpl<Record> {

	private static final long serialVersionUID = -888576647;

	/**
	 * The reference instance of <code>public.categories</code>
	 */
	public static final Categories CATEGORIES = new Categories();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>public.categories.categories_id</code>.
	 */
	public final TableField<Record, Integer> CATEGORIES_ID = createField("categories_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.categories.categories_type_id</code>.
	 */
	public final TableField<Record, Integer> CATEGORIES_TYPE_ID = createField("categories_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.categories.description</code>.
	 */
	public final TableField<Record, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "");

	/**
	 * Create a <code>public.categories</code> table reference
	 */
	public Categories() {
		this("categories", null);
	}

	/**
	 * Create an aliased <code>public.categories</code> table reference
	 */
	public Categories(String alias) {
		this(alias, CATEGORIES);
	}

	private Categories(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Categories(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Categories as(String alias) {
		return new Categories(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Categories rename(String name) {
		return new Categories(name, null);
	}
}
