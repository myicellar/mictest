/**
 * This class is generated by jOOQ
 */
package db.jooq.tables;


import db.jooq.Public;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Winery extends TableImpl<Record> {

	private static final long serialVersionUID = -442618084;

	/**
	 * The reference instance of <code>public.winery</code>
	 */
	public static final Winery WINERY = new Winery();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>public.winery.winery_id</code>.
	 */
	public final TableField<Record, Integer> WINERY_ID = createField("winery_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.winery.description</code>.
	 */
	public final TableField<Record, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

	/**
	 * Create a <code>public.winery</code> table reference
	 */
	public Winery() {
		this("winery", null);
	}

	/**
	 * Create an aliased <code>public.winery</code> table reference
	 */
	public Winery(String alias) {
		this(alias, WINERY);
	}

	private Winery(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Winery(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Winery as(String alias) {
		return new Winery(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Winery rename(String name) {
		return new Winery(name, null);
	}
}
