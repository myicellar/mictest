/**
 * This class is generated by jOOQ
 */
package dbq.tables;


import dbq.Public;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WineRating extends TableImpl<Record> {

	private static final long serialVersionUID = 1967667283;

	/**
	 * The reference instance of <code>public.wine_rating</code>
	 */
	public static final WineRating WINE_RATING = new WineRating();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>public.wine_rating.wine_id</code>.
	 */
	public final TableField<Record, Integer> WINE_ID = createField("wine_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.wine_rating.rating_type</code>.
	 */
	public final TableField<Record, String> RATING_TYPE = createField("rating_type", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

	/**
	 * The column <code>public.wine_rating.rating</code>.
	 */
	public final TableField<Record, BigDecimal> RATING = createField("rating", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>public.wine_rating.comment</code>.
	 */
	public final TableField<Record, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * Create a <code>public.wine_rating</code> table reference
	 */
	public WineRating() {
		this("wine_rating", null);
	}

	/**
	 * Create an aliased <code>public.wine_rating</code> table reference
	 */
	public WineRating(String alias) {
		this(alias, WINE_RATING);
	}

	private WineRating(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private WineRating(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WineRating as(String alias) {
		return new WineRating(alias, this);
	}

	/**
	 * Rename this table
	 */
	public WineRating rename(String name) {
		return new WineRating(name, null);
	}
}
