/**
 * This class is generated by jOOQ
 */
package dbq.tables;


import dbq.Public;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserWineReview extends TableImpl<Record> {

	private static final long serialVersionUID = 453077558;

	/**
	 * The reference instance of <code>public.user_wine_review</code>
	 */
	public static final UserWineReview USER_WINE_REVIEW = new UserWineReview();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>public.user_wine_review.user_id</code>.
	 */
	public final TableField<Record, UUID> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>public.user_wine_review.wine_id</code>.
	 */
	public final TableField<Record, Integer> WINE_ID = createField("wine_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.user_wine_review.review_date</code>.
	 */
	public final TableField<Record, Date> REVIEW_DATE = createField("review_date", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>public.user_wine_review.rating</code>.
	 */
	public final TableField<Record, BigDecimal> RATING = createField("rating", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>public.user_wine_review.comment</code>.
	 */
	public final TableField<Record, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>public.user_wine_review.intensity</code>.
	 */
	public final TableField<Record, Integer> INTENSITY = createField("intensity", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.user_wine_review.sweetness</code>.
	 */
	public final TableField<Record, Integer> SWEETNESS = createField("sweetness", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.user_wine_review.alcohol</code>.
	 */
	public final TableField<Record, Integer> ALCOHOL = createField("alcohol", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.user_wine_review.tannin</code>.
	 */
	public final TableField<Record, Integer> TANNIN = createField("tannin", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.user_wine_review.acidity</code>.
	 */
	public final TableField<Record, Integer> ACIDITY = createField("acidity", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.user_wine_review.finish</code>.
	 */
	public final TableField<Record, Integer> FINISH = createField("finish", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.user_wine_review.sort_seq</code>.
	 */
	public final TableField<Record, Integer> SORT_SEQ = createField("sort_seq", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.user_wine_review</code> table reference
	 */
	public UserWineReview() {
		this("user_wine_review", null);
	}

	/**
	 * Create an aliased <code>public.user_wine_review</code> table reference
	 */
	public UserWineReview(String alias) {
		this(alias, USER_WINE_REVIEW);
	}

	private UserWineReview(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private UserWineReview(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserWineReview as(String alias) {
		return new UserWineReview(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserWineReview rename(String name) {
		return new UserWineReview(name, null);
	}
}
