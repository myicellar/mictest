/**
 * This class is generated by jOOQ
 */
package dbq.tables;


import dbq.Public;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Grape extends TableImpl<Record> {

	private static final long serialVersionUID = 715571179;

	/**
	 * The reference instance of <code>public.grape</code>
	 */
	public static final Grape GRAPE = new Grape();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>public.grape.id</code>.
	 */
	public final TableField<Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.grape.grape_name</code>.
	 */
	public final TableField<Record, String> GRAPE_NAME = createField("grape_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * Create a <code>public.grape</code> table reference
	 */
	public Grape() {
		this("grape", null);
	}

	/**
	 * Create an aliased <code>public.grape</code> table reference
	 */
	public Grape(String alias) {
		this(alias, GRAPE);
	}

	private Grape(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Grape(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Grape as(String alias) {
		return new Grape(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Grape rename(String name) {
		return new Grape(name, null);
	}
}
