/**
 * This class is generated by jOOQ
 */
package dbq;


import dbq.Sequences;
import dbq.tables.Categories;
import dbq.tables.CategoriesType;
import dbq.tables.Country;
import dbq.tables.Grape;
import dbq.tables.UserAcct;
import dbq.tables.UserProfile;
import dbq.tables.UserSession;
import dbq.tables.UserWineList;
import dbq.tables.UserWineReview;
import dbq.tables.VUserCellarList;
import dbq.tables.VUserReview;
import dbq.tables.VUserWishlist;
import dbq.tables.VWineDetail;
import dbq.tables.Wine;
import dbq.tables.WineMaster;
import dbq.tables.WineRating;
import dbq.tables.WineRegion;
import dbq.tables.WineStyle;
import dbq.tables.WineType;
import dbq.tables.Winedata1;
import dbq.tables.Winery;
import dbq.tables.WineryBk;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = 319499182;

	/**
	 * The reference instance of <code>public</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("public");
	}

	@Override
	public final List<Sequence<?>> getSequences() {
		List result = new ArrayList();
		result.addAll(getSequences0());
		return result;
	}

	private final List<Sequence<?>> getSequences0() {
		return Arrays.<Sequence<?>>asList(
			Sequences.CATEGORIES_CATEGORIES_ID_SEQ,
			Sequences.CELLAR_LIST_SORT,
			Sequences.WINE_MASTER_WINE_ID_SEQ);
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(
			Categories.CATEGORIES,
			CategoriesType.CATEGORIES_TYPE,
			Country.COUNTRY,
			Grape.GRAPE,
			UserAcct.USER_ACCT,
			UserProfile.USER_PROFILE,
			UserSession.USER_SESSION,
			UserWineList.USER_WINE_LIST,
			UserWineReview.USER_WINE_REVIEW,
			VUserCellarList.V_USER_CELLAR_LIST,
			VUserReview.V_USER_REVIEW,
			VUserWishlist.V_USER_WISHLIST,
			VWineDetail.V_WINE_DETAIL,
			Wine.WINE,
			Winedata1.WINEDATA1,
			WineMaster.WINE_MASTER,
			WineRating.WINE_RATING,
			WineRegion.WINE_REGION,
			Winery.WINERY,
			WineryBk.WINERY_BK,
			WineStyle.WINE_STYLE,
			WineType.WINE_TYPE);
	}
}
